---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BlogPostLayout from '../../../layouts/BlogPost.astro';
import { buildAlternateLinks, buildTranslationLinks } from '../../../utils/i18n';

interface Props {
  readonly post: CollectionEntry<'blog'>;
}

export async function getStaticPaths() {
  const posts = await getCollection('blog', (entry) => entry.data.locale === 'zh');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props as Props;
const { Content, headings } = await post.render();
const allVariants = await getCollection(
  'blog',
  (entry) => entry.data.translationKey === post.data.translationKey,
);
const translationLinks = buildTranslationLinks(allVariants, post);
const alternateLinks = buildAlternateLinks(allVariants, post);
---

<BlogPostLayout post={post} headings={headings} translations={translationLinks} alternates={alternateLinks}>
  <Content />
</BlogPostLayout>

